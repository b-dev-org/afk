name: CI

on: push

env:
  MIX_ENV: test

jobs:
  compile:
    name: Compile

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Compile
        run: mix compile --warnings-as-errors

  format:
    name: "Check Formatted"

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Check formatted
        run: mix format --check-formatted

  test:
    name: Tests

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Run tests
        run: mix coveralls.json
      - uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  credo:
    name: Credo

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Run credo
        run: mix credo --strict

  dialyzer:
    name: Dialyzer

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Run dialyzer
        run: mix dialyzer --halt-exit-status
