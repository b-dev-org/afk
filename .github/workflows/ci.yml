name: CI

on: push

env:
  MIX_ENV: test

jobs:
  format:
    name: "Check Formatted"

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    steps:
      - uses: actions/checkout@v1
      - name: Check formatted
        run: mix format --check-formatted

  deps:
    name: Dependencies

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - name: Install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

  compile:
    name: Compile

    needs: deps

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - uses: actions/cache@v1
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Compile
        run: mix compile --warnings-as-errors

  test:
    name: Tests

    needs: [deps, build]

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - uses: actions/cache@v1
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Run tests
        run: mix coveralls.json
      - uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  credo:
    name: Credo

    needs: [deps, build]

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - uses: actions/cache@v1
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Run credo
        run: mix credo --strict

  dialyzer:
    name: Dialyzer

    needs: [deps, build]

    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.4-alpine

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - uses: actions/cache@v1
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Run dialyzer
        run: mix dialyzer --halt-exit-status
